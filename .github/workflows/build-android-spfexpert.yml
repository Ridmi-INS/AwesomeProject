# name: "Build Android app"

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: macos-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Setup Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: "18"
#           cache: "npm"

#       - name: Install Expo CLI
#         run: npm install -g expo-cli

#       - name: Install project dependencies
#         run: npm install

#       - name: Build Expo app
#         run: expo build:android

#       - name: Upload APK artifact
#         uses: actions/upload-artifact@v2
#         with:
#           name: app
#           path: ./outputs/apk/release/app-release.apk
#       - name: Build application
#         run: |
#           cd android
#           ./gradlew assembleRelease

#       - name: Upload application
#         uses: actions/upload-artifact@v2
#         with:
#           name: app
#           path: android/app/build/outputs/apk/release/app-release.apk
#           retention-days: 3
# name: "Build Android app"
# on: push

# jobs:
#   build:
#     name: EAS Update
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check for EXPO_TOKEN
#         run: |
#           if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
#             echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
#             exit 1
#           fi

#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Setup Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18.x
#           cache: npm

#       # - name: Install Expo CLI
#       #   run: npm install -g eas-cli

#       - name: Setup EAS
#         uses: expo/expo-github-action@v8
#         with:
#           eas-version: latest
#           token: ${{ secrets.EXPO_TOKEN }}

#       - name: Install dependencies
#         run: npm install

#       # - name: Publish update
#       #   run: eas update --auto

#       - name: Configure
#         run: eas build:configure

#       # - name: Build Android APK Bundle
#       #   run: eas build -p android

#latest
# name: update
# on: push

# jobs:
#   build:
#     name: EAS Update
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check for EXPO_TOKEN
#         run: |
#           if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
#             echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
#             exit 1
#           fi

#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Setup Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18.x
#           cache: yarn

#       - name: Setup EAS
#         uses: expo/expo-github-action@v8
#         with:
#           eas-version: latest
#           token: ${{ secrets.EXPO_TOKEN }}

#       - name: Install dependencies
#         run: yarn install

#       # - name: Publish update
#       #   run: eas update --auto

#       - name: Build Application
#         run: eas build --platform android --profile preview

# name: Build Expo Project

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2

#     - name: Set up Node.js
#       uses: actions/setup-node@v2
#       with:
#         node-version: '14' # Set this to the version of Node.js that matches your development environment

#     - name: Install dependencies
#       run: |
#         npm install -g expo-cli
#         npm install

#     - name: Login to Expo
#       run: expo login -u ${{ secrets.EXPO_CLI_USERNAME }} -p ${{ secrets.EXPO_CLI_PASSWORD }}

#     - name: Build APK
#       run: expo build:android -t apk

#     - name: Download APK
#       run: |
#         APK_URL=$(expo url:apk)
#         wget -O my-app.apk "$APK_URL"

#     - name: Upload APK to Artifacts
#       uses: actions/upload-artifact@v2
#       with:
#         name: my-app
#         path: my-app.apk

name: Build Expo Project

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # Set this to the version of Node.js that matches your development environment

      - name: Install dependencies
        run: |
          npm install -g expo-cli
          npm install

      - name: Login to Expo
        run: expo login -u ${{ secrets.EXPO_CLI_USERNAME }} -p ${{ secrets.EXPO_CLI_PASSWORD }}

      - name: Build APK
        run: expo build:android -t apk
